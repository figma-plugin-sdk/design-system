import Icon from "../Icon/Icon.marko";
import { IconCaretRight, IconCaretDown } from "../../../icons/index";
export type DisclosureItemProps = {
  variant?: 'primary' | 'secondary' | 'tertiary';
  renderBody: Marko.Body<[string]>;
  uniqueId: string;
  title?: string;
  expanded: boolean;
  section: boolean;
  open: boolean;
  iconName: string;
};
export type Input = DisclosureItemProps & Marko.Input<"disclosureItem">;
export const DefaultValues = {
    variant: "primary",
    uniqueId:
        "disclosureItem--" + (Math.random() * 10000000).toFixed(0).toString(),
    expanded: false,
    section: false,
    open: false,
    iconName: "IconCaretRight",
} as const;
class {
    declare state: Required<DisclosureItemProps>;

    onCreate(input: Input) {
        this.state = {
            ...DefaultValues,
            ...input,
        };
    }
    // Method to handle click event
    handleClick(event, itemId) {
        // Implement logic similar to Svelte's clickHandler
        // Adjust according to how you manage state in your app
    }
}

<template>
    <li
        id=state.uniqueId
        class=[state.expanded ? "expanded" : "", state.section ? "section" : ""]
    >
        <div on-click("handleClick", state.uniqueId) class="header">
            <div class="icon">
                <!-- Conditional rendering for the icon -->
                <if(state.expanded)>
                    <Icon/>
                </if>
                <else>
                    <Icon/>
                </else>
            </div>
            <div class="title">
                ${state.title}
            </div>
        </div>
        <div class="content">
            <!-- Render slot content -->
            <@body/>
        </div>
    </li>
</template>

<style>/* Include your CSS styles here */</style>
