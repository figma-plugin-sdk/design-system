export interface Input {
    items: {
        label: string;
        content: string;
        expanded?: boolean;
        section?: boolean;
    };
    customStyles?: string; // For responsive design
}
class {
    onCreate() {
        this.state = {
            expandedStates: {},
        };
    }

    toggleItem(index) {
        const isExpanded = this.state.expandedStates[index] || false;
        this.state.expandedStates[index] = !isExpanded;

        // Emit custom event
        this.emit(isExpanded ? "collapse" : "expand", { index });
    }
}

<ul class="disclosure" role="list">
    <for|item, index| of=input.items>
        <li
            class=[
                "disclosure__item",
                this.state.expandedStates[index] ? "disclosure--expanded" : "",
                item.section ? "disclosure--section" : "",
            ]
            onClick("toggleItem", index)
            role="listitem"
            aria-controls=`disclosure-content-${index}`
        >
            <div
                class="disclosure__label"
                role="button"
                tabindex="0"
                aria-expanded=(
                    this.state.expandedStates[index] ? "true" : "false"
                )
                onKeyPress=["Enter", "toggleItem", index]
            >
                ${item.label}
            </div>
            <div
                id=`disclosure-content-${index}`
                class="disclosure__content"
                aria-hidden=(
                    this.state.expandedStates[index] ? "false" : "true"
                )
            >
                ${item.content}
            </div>
        </li>
    </for>
</ul>
