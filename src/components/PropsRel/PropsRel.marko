import PropForm from "../PropForm/PropForm.marko";
export interface formModal {
    showModal: boolean;
}
export type Input = formModal;
export const DefaultValues = {
    showModal: false,
};
class {
    declare state: formModal;
    onCreate(input: Input) {
        this.state = {
            ...DefaultValues,
            ...input,
        };
    }

    openModal() {
        // You can use 'data.property' and 'data.value' to pass to the modal if needed
        this.setState("showModal", true);
    }

    closeModal() {
        this.setState("showModal", false);
    }
}

<div class="property-container">
    <h4>
        Properties
        <button class="property-button">
            <!-- Plus sign icon tag -->
        </button>
    </h4>
    <ul class="property-list">
        <li class="property-item">
            <span class="property-name">
                State
            </span>
            <button type="button" class="property-button" on-click("openModal")>
                Mixed, Off, On, ...
            </button>
        </li>
        <li class="property-item">
            <span class="property-name">
                Focused
            </span>
            <button type="button" class="property-button">
                False, True
            </button>
        </li>
        <li class="property-item">
            <span class="property-name">
                Disabled
            </span>
            <button type="button" class="property-button">
                False, True
            </button>
        </li>
    </ul>
</div>

<if(state.showModal)>
    <div class="modal-backdrop" on-click("closeModal")/>
    <div class="modal">
        <PropForm/>
    </div>
</if>
style {
    h4 {
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 8px;
    }
    .property-list {
        font-family: Arial, sans-serif;
        font-size: 14px;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .property-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 4px 0;
    }

    .property-name {
        margin-right: 24px;
    }

    .property-button {
        padding: 5px 10px;
        border: none;
        background: none;
        color: inherit;
        text-align: left;
        cursor: pointer;
    }

    .property-button:hover {
        background-color: transparent;
        text-decoration: none;
    }

    /* Position the property-container relatively to anchor the modal */
    .property-container {
        position: relative;
        /* Other styles... */
    }

    /* Style for the modal backdrop */
    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black */
        z-index: 1000; /* Ensure it's above other content but below the modal */
    }

    /* Style for the modal itself to ensure it's on top */
    .modal {
        position: fixed; /* Fixed to the viewport */
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); /* Center the modal */
        z-index: 1001; /* Higher than the backdrop */
        /* Other styles for sizing, shadow, etc. */
    }
}
